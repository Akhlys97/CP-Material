This Note for Dynamice programming -->

There are Five Basic form of Dynamic programming
	1. DP(i,...) -> Knapscap DP
	2. DP(i,...) -> Finished at index i
	3. DP(state) -> Game DP
	4. DP(i, j,...) -> Two String Operation s1[i] and s2[j]
	5. DP(l , r, ...) -> LR DP(for Induction Recursion)
	
Dynamic programming is Memorisation for do not recalculated the same state
Time complexity -> state*transition(generally) or step to trasition of state
Space complexity -> Memorisation space(Dimension of state)

First find out the Recursion solution of Problem -> 1. Induction 2. Completed Search
Define the state and transition of Recursion
** if no of state < node of recursion then used Memorisation(Dynamic programming)

